//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.NotificationHubs.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.NotificationHubs.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client cannot enable redirect when AcceptMessageSession is used..
        /// </summary>
        internal static string AcceptMessageSessionRedirectNotSupported {
            get {
                return ResourceManager.GetString("AcceptMessageSessionRedirectNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close &apos;{0}&apos;..
        /// </summary>
        internal static string ActivityClose {
            get {
                return ResourceManager.GetString("ActivityClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open &apos;{0}&apos;..
        /// </summary>
        internal static string ActivityOpen {
            get {
                return ResourceManager.GetString("ActivityOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An AsyncCallback threw an exception..
        /// </summary>
        internal static string AsyncCallbackException {
            get {
                return ResourceManager.GetString("AsyncCallbackException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;End&apos; method has already been called on this AsyncResult object..
        /// </summary>
        internal static string AsyncObjectAlreadyEnded {
            get {
                return ResourceManager.GetString("AsyncObjectAlreadyEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base address cannot contain a Uri fragment..
        /// </summary>
        internal static string BaseAddressCannotHaveFragment {
            get {
                return ResourceManager.GetString("BaseAddressCannotHaveFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base address cannot contain a Uri query string..
        /// </summary>
        internal static string BaseAddressCannotHaveQuery {
            get {
                return ResourceManager.GetString("BaseAddressCannotHaveQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A base address cannot contain a Uri user info section..
        /// </summary>
        internal static string BaseAddressCannotHaveUserInfo {
            get {
                return ResourceManager.GetString("BaseAddressCannotHaveUserInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only an absolute Uri can be used as a base address..
        /// </summary>
        internal static string BaseAddressMustBeAbsolute {
            get {
                return ResourceManager.GetString("BaseAddressMustBeAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BasicHttp binding requires that BasicHttpBinding.Security.Message.ClientCredentialType be equivalent to the BasicHttpMessageCredentialType.Certificate credential type for secure messages. Select Transport or TransportWithMessageCredential security for UserName credentials..
        /// </summary>
        internal static string BasicHttpMessageSecurityRequiresCertificate {
            get {
                return ResourceManager.GetString("BasicHttpMessageSecurityRequiresCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to allocate a managed memory buffer of {0} bytes. The amount of available memory may be low..
        /// </summary>
        internal static string BufferAllocationFailed {
            get {
                return ResourceManager.GetString("BufferAllocationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A newly accepted connection did not receive initialization data from the sender within the configured ChannelInitializationTimeout ({0}). As a result the connection will be aborted. If you are on a highly congested network, or your sending machine is heavily loaded, consider increasing this value or load-balancing your server..
        /// </summary>
        internal static string ChannelInitializationTimeout {
            get {
                return ResourceManager.GetString("ChannelInitializationTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel type {0} is not supported by this channel manager..
        /// </summary>
        internal static string ChannelTypeNotSupported {
            get {
                return ResourceManager.GetString("ChannelTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; contained character &apos;{1}&apos; which is not allowed because it is reserved in the Uri scheme..
        /// </summary>
        internal static string CharacterReservedForUriScheme {
            get {
                return ResourceManager.GetString("CharacterReservedForUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientCredentialType.None is not valid for the TransportWithMessageCredential security mode. Specify a message credential type or use a different security mode..
        /// </summary>
        internal static string ClientCredentialTypeMustBeSpecifiedForMixedMode {
            get {
                return ResourceManager.GetString("ClientCredentialTypeMustBeSpecifiedForMixedMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientWebSocketConnection is closed..
        /// </summary>
        internal static string ClientWebSocketConnectionClosed {
            get {
                return ResourceManager.GetString("ClientWebSocketConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EndRead method cannot be called before the asynchronous read operation is complete..
        /// </summary>
        internal static string ClientWebSocketConnectionPrematureEndRead {
            get {
                return ResourceManager.GetString("ClientWebSocketConnectionPrematureEndRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BeginRead method cannot be called when there is an asynchronous read operation already pending..
        /// </summary>
        internal static string ClientWebSocketConnectionReadPending {
            get {
                return ResourceManager.GetString("ClientWebSocketConnectionReadPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceBusClientWebSocket not in Initial State during Connect..
        /// </summary>
        internal static string ClientWebSocketNotInInitialState {
            get {
                return ResourceManager.GetString("ClientWebSocketNotInInitialState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceBusClientWebSocket not in Open State during Receive..
        /// </summary>
        internal static string ClientWebSocketNotInOpenStateDuringReceive {
            get {
                return ResourceManager.GetString("ClientWebSocketNotInOpenStateDuringReceive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceBusClientWebSocket not in Open State during Send..
        /// </summary>
        internal static string ClientWebSocketNotInOpenStateDuringSend {
            get {
                return ResourceManager.GetString("ClientWebSocketNotInOpenStateDuringSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client WebSocket Transport is closed..
        /// </summary>
        internal static string ClientWebSocketTransportClosed {
            get {
                return ResourceManager.GetString("ClientWebSocketTransportClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client WebSocket Transport read buffer is too small to read incoming message..
        /// </summary>
        internal static string ClientWebSocketTransportReadBufferTooSmall {
            get {
                return ResourceManager.GetString("ClientWebSocketTransportReadBufferTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close timed out after {0}. Increase the timeout value passed to the call to Close or increase the CloseTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string CloseTimedOut {
            get {
                return ResourceManager.GetString("CloseTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be used for communication because it has been Aborted. {1}.
        /// </summary>
        internal static string CommunicationObjectAbortedStack2 {
            get {
                return ResourceManager.GetString("CommunicationObjectAbortedStack2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication object &apos;{0}&apos; has overridden the virtual function {1} but it does not call version defined in the base class..
        /// </summary>
        internal static string CommunicationObjectBaseClassMethodNotCalled {
            get {
                return ResourceManager.GetString("CommunicationObjectBaseClassMethodNotCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be modified while it is in the {1} state..
        /// </summary>
        internal static string CommunicationObjectCannotBeModifiedInState {
            get {
                return ResourceManager.GetString("CommunicationObjectCannotBeModifiedInState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication object &apos;{0}&apos; is in the {1} state.  Communication objects cannot be used for communication unless they are in the Opened state..
        /// </summary>
        internal static string CommunicationObjectCannotBeUsed {
            get {
                return ResourceManager.GetString("CommunicationObjectCannotBeUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The communication object &apos;{0}&apos; cannot be used for communication because it is in the Faulted state. {1}.
        /// </summary>
        internal static string CommunicationObjectFaultedStack2 {
            get {
                return ResourceManager.GetString("CommunicationObjectFaultedStack2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration binding extension &apos;{0}&apos; could not be found. Verify that this binding extension is properly registered in system.serviceModel/extensions/bindingExtensions and that it is spelled correctly..
        /// </summary>
        internal static string ConfigBindingExtensionNotFound {
            get {
                return ResourceManager.GetString("ConfigBindingExtensionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {1} binding does not have a configured binding named &apos;{0}&apos;..
        /// </summary>
        internal static string ConfigInvalidBindingConfigurationName {
            get {
                return ResourceManager.GetString("ConfigInvalidBindingConfigurationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid instance of type &apos;{1}&apos;..
        /// </summary>
        internal static string ConfigInvalidClassFactoryValue {
            get {
                return ResourceManager.GetString("ConfigInvalidClassFactoryValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance is not a valid configurable value of type &apos;{0}&apos;..
        /// </summary>
        internal static string ConfigInvalidClassInstanceValue {
            get {
                return ResourceManager.GetString("ConfigInvalidClassInstanceValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid encoding string for System.Text.Encoding.GetEncoding(string)..
        /// </summary>
        internal static string ConfigInvalidEncodingValue {
            get {
                return ResourceManager.GetString("ConfigInvalidEncodingValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; configuration section cannot be created. The machine.config file is missing information. Verify that this configuration section is properly registered and that you have correctly spelled the section name. For Windows Communication Foundation sections, run ServiceModelReg.exe -i to fix this error..
        /// </summary>
        internal static string ConfigSectionNotFound {
            get {
                return ResourceManager.GetString("ConfigSectionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Type {0} was sent to a service expecting {1}. The client and service bindings may be mismatched..
        /// </summary>
        internal static string ContentTypeMismatch {
            get {
                return ResourceManager.GetString("ContentTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No DNS entries exist for host {0}..
        /// </summary>
        internal static string DnsResolveFailed {
            get {
                return ResourceManager.GetString("DnsResolveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplex channel to {0} was aborted during the open process..
        /// </summary>
        internal static string DuplexChannelAbortedDuringOpen {
            get {
                return ResourceManager.GetString("DuplexChannelAbortedDuringOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No duplex session listener was listening at {0}. This could be due to an incorrect via set on the client or a binding mismatch..
        /// </summary>
        internal static string DuplexSessionListenerNotFound {
            get {
                return ResourceManager.GetString("DuplexSessionListenerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A registration already exists for Uri &apos;{0}&apos;..
        /// </summary>
        internal static string DuplicateRegistration {
            get {
                return ResourceManager.GetString("DuplicateRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was no endpoint listening at {0} that could accept the message. This is often caused by an incorrect address or Soap action. See the InnerException, if present, for more details..
        /// </summary>
        internal static string EndpointNotFound {
            get {
                return ResourceManager.GetString("EndpointNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Processor already registered for partion &apos;{0}&apos;..
        /// </summary>
        internal static string EventProcessorAlreadyRegistered {
            get {
                return ResourceManager.GetString("EventProcessorAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt was made to decode a value after the framing stream was ended..
        /// </summary>
        internal static string FramingAtEnd {
            get {
                return ResourceManager.GetString("FramingAtEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content Type {0} was not supported by service {1}. The client and service bindings may be mismatched..
        /// </summary>
        internal static string FramingContentTypeMismatch {
            get {
                return ResourceManager.GetString("FramingContentTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framing content type size ({0}) exceeds the quota..
        /// </summary>
        internal static string FramingContentTypeTooLong {
            get {
                return ResourceManager.GetString("FramingContentTypeTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content type &apos;{0}&apos; is too long to be processed by the remote host. See the server logs for more details..
        /// </summary>
        internal static string FramingContentTypeTooLongFault {
            get {
                return ResourceManager.GetString("FramingContentTypeTooLongFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while reading message framing format at position {0} of stream (state: {1}).
        /// </summary>
        internal static string FramingError {
            get {
                return ResourceManager.GetString("FramingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framing fault size ({0}) exceeds the quota..
        /// </summary>
        internal static string FramingFaultTooLong {
            get {
                return ResourceManager.GetString("FramingFaultTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server faulted with code &apos;{0}&apos;..
        /// </summary>
        internal static string FramingFaultUnrecognized {
            get {
                return ResourceManager.GetString("FramingFaultUnrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum message size quota for incoming messages has been exceeded for the remote channel. See the server logs for more details..
        /// </summary>
        internal static string FramingMaxMessageSizeExceeded {
            get {
                return ResourceManager.GetString("FramingMaxMessageSizeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framing mode {0} is not supported..
        /// </summary>
        internal static string FramingModeNotSupported {
            get {
                return ResourceManager.GetString("FramingModeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The .Net Framing mode being used is not supported by &apos;{0}&apos;. See the server logs for more details..
        /// </summary>
        internal static string FramingModeNotSupportedFault {
            get {
                return ResourceManager.GetString("FramingModeNotSupportedFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More data was expected, but EOF was reached..
        /// </summary>
        internal static string FramingPrematureEOF {
            get {
                return ResourceManager.GetString("FramingPrematureEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected record type &apos;{0}&apos;, but found &apos;{1}&apos;..
        /// </summary>
        internal static string FramingRecordTypeMismatch {
            get {
                return ResourceManager.GetString("FramingRecordTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified size is too large for this implementation..
        /// </summary>
        internal static string FramingSizeTooLarge {
            get {
                return ResourceManager.GetString("FramingSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested upgrade is not supported by &apos;{0}&apos;. This could be due to mismatched bindings (for example security enabled on the client and not on the server)..
        /// </summary>
        internal static string FramingUpgradeInvalid {
            get {
                return ResourceManager.GetString("FramingUpgradeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be accessed because it has not yet been fully decoded..
        /// </summary>
        internal static string FramingValueNotAvailable {
            get {
                return ResourceManager.GetString("FramingValueNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framing major version {0} is not supported..
        /// </summary>
        internal static string FramingVersionNotSupported {
            get {
                return ResourceManager.GetString("FramingVersionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The .Net Framing version being used is not supported by &apos;{0}&apos;. See the server logs for more details..
        /// </summary>
        internal static string FramingVersionNotSupportedFault {
            get {
                return ResourceManager.GetString("FramingVersionNotSupportedFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framing via ({0}) is not a valid URI..
        /// </summary>
        internal static string FramingViaNotUri {
            get {
                return ResourceManager.GetString("FramingViaNotUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The framing via size ({0}) exceeds the quota..
        /// </summary>
        internal static string FramingViaTooLong {
            get {
                return ResourceManager.GetString("FramingViaTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Via &apos;{0}&apos; is too long to be processed by the remote host. See the server logs for more details..
        /// </summary>
        internal static string FramingViaTooLongFault {
            get {
                return ResourceManager.GetString("FramingViaTooLongFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user callback threw an exception. Check the exception stack and inner exception to determine the callback that failed..
        /// </summary>
        internal static string GenericCallbackException {
            get {
                return ResourceManager.GetString("GenericCallbackException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BaseUriWithWildcard object has invalid fields after deserialization..
        /// </summary>
        internal static string Hosting_BaseUriDeserializedNotValid {
            get {
                return ResourceManager.GetString("Hosting_BaseUriDeserializedNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protocol binding &apos;{0}&apos; does not conform to the syntax for &apos;{1}&apos;. The following is an example of valid &apos;{1}&apos; protocol bindings: &apos;{2}&apos;..
        /// </summary>
        internal static string Hosting_MisformattedBinding {
            get {
                return ResourceManager.GetString("Hosting_MisformattedBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protocol binding &apos;{0}&apos; is not valid for &apos;{1}&apos;. This might be because the port number is out of range..
        /// </summary>
        internal static string Hosting_MisformattedBindingData {
            get {
                return ResourceManager.GetString("Hosting_MisformattedBindingData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; protocol binding &apos;{1}&apos; specifies an invalid port number &apos;{2}&apos;..
        /// </summary>
        internal static string Hosting_MisformattedPort {
            get {
                return ResourceManager.GetString("Hosting_MisformattedPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no compatible TransportManager found for Uri &apos;{0}&apos;. This may be because that you have used an absolute address which points outside of the virtual application. Please use a relative address instead..
        /// </summary>
        internal static string Hosting_NoHttpTransportManagerForUri {
            get {
                return ResourceManager.GetString("Hosting_NoHttpTransportManagerForUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no compatible TransportManager found for Uri &apos;{0}&apos;. This may be because that you have used an absolute address which points outside of the virtual application, or the binding settings of the endpoint do not match those that have been set by other services or endpoints. Note that all bindings for the same protocol should have same settings in the same application..
        /// </summary>
        internal static string Hosting_NoTcpPipeTransportManagerForUri {
            get {
                return ResourceManager.GetString("Hosting_NoTcpPipeTransportManagerForUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The protocol &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string Hosting_NotSupportedProtocol {
            get {
                return ResourceManager.GetString("Hosting_NotSupportedProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested service &apos;{0}&apos; could not be activated. See the server&apos;s diagnostic trace logs for more information..
        /// </summary>
        internal static string Hosting_ServiceActivationFailed {
            get {
                return ResourceManager.GetString("Hosting_ServiceActivationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; authentication scheme has been specified for the proxy on the HTTP factory. However, the factory only supports specification of exactly one authentication scheme. Valid authentication schemes are Digest, Negotiate, NTLM, Basic, or Anonymous..
        /// </summary>
        internal static string HttpProxyRequiresSingleAuthScheme {
            get {
                return ResourceManager.GetString("HttpProxyRequiresSingleAuthScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inner listener factory of {0} must be set before this operation..
        /// </summary>
        internal static string InnerListenerFactoryNotSet {
            get {
                return ResourceManager.GetString("InnerListenerFactoryNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient memory available to complete the operation..
        /// </summary>
        internal static string InsufficentMemory {
            get {
                return ResourceManager.GetString("InsufficentMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The AsyncResult object used to end this operation was not the object that was returned when the operation was initiated..
        /// </summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid decoder found within state machine..
        /// </summary>
        internal static string InvalidDecoderStateMachine {
            get {
                return ResourceManager.GetString("InvalidDecoderStateMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression failed. Could not read Gzip Header. Returning the original body stream..
        /// </summary>
        internal static string InvalidGzipHeaderCannotBeRead {
            get {
                return ResourceManager.GetString("InvalidGzipHeaderCannotBeRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression failed. The compressed stream has unexpected values in the flag field. Returning the original body stream..
        /// </summary>
        internal static string InvalidGzipUnexpectedFlagsValue {
            get {
                return ResourceManager.GetString("InvalidGzipUnexpectedFlagsValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object synchronization method was called from an unsynchronized block of code..
        /// </summary>
        internal static string InvalidLockOperation {
            get {
                return ResourceManager.GetString("InvalidLockOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NotificationHub creation with preview API version, or lesser version is not supported..
        /// </summary>
        internal static string InvalidNotificationHubCreateRequest {
            get {
                return ResourceManager.GetString("InvalidNotificationHubCreateRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; contains character(s) that are not allowed by Service Bus. Entity segments can contain only letters, numbers, periods (.), hyphens (-), and underscores (_)..
        /// </summary>
        internal static string InvalidUriPathCharacter {
            get {
                return ResourceManager.GetString("InvalidUriPathCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided Uri scheme &apos;{0}&apos; is invalid; expected &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidUriScheme {
            get {
                return ResourceManager.GetString("InvalidUriScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel listener at &apos;{0}&apos; is not registered with this transport manager..
        /// </summary>
        internal static string ListenerFactoryNotRegistered {
            get {
                return ResourceManager.GetString("ListenerFactoryNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For TransferMode.Buffered, MaxReceivedMessageSize and MaxBufferSize must be the same value..
        /// </summary>
        internal static string MaxBufferSizeMustMatchMaxReceivedMessageSize {
            get {
                return ResourceManager.GetString("MaxBufferSizeMustMatchMaxReceivedMessageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxBufferSize must not exceed MaxReceivedMessageSize..
        /// </summary>
        internal static string MaxBufferSizeMustNotExceedMaxReceivedMessageSize {
            get {
                return ResourceManager.GetString("MaxBufferSizeMustNotExceedMaxReceivedMessageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum message size quota for incoming messages ({0}) has been exceeded. To increase the quota, use the MaxReceivedMessageSize property on the appropriate binding element..
        /// </summary>
        internal static string MaxReceivedMessageSizeExceeded {
            get {
                return ResourceManager.GetString("MaxReceivedMessageSizeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This factory buffers messages, so the message sizes must be in the range of an integer value..
        /// </summary>
        internal static string MaxReceivedMessageSizeMustBeInIntegerRange {
            get {
                return ResourceManager.GetString("MaxReceivedMessageSizeMustBeInIntegerRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum message size quota for outgoing messages ({0}) has been exceeded..
        /// </summary>
        internal static string MaxSentMessageSizeExceeded {
            get {
                return ResourceManager.GetString("MaxSentMessageSizeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a problem with the Xml that was received from the network. See inner exception for more details..
        /// </summary>
        internal static string MessageXmlProtocolError {
            get {
                return ResourceManager.GetString("MessageXmlProtocolError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request Message is missing a MessageID header. This header is required to correlate a reply..
        /// </summary>
        internal static string MissingMessageID {
            get {
                return ResourceManager.GetString("MissingMessageID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one MessageEncodingBindingElement was found in the BindingParameters of the BindingContext. This usually is caused by having multiple MessageEncodingBindingElements in a CustomBinding. Remove all but one of these elements..
        /// </summary>
        internal static string MultipleMebesInParameters {
            get {
                return ResourceManager.GetString("MultipleMebesInParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one IStreamUpgradeProviderElement was found in the BindingParameters of the BindingContext. This usually is caused by having multiple IStreamUpgradeProviderElements in a CustomBinding. Remove all but one of these elements..
        /// </summary>
        internal static string MultipleStreamUpgradeProvidersInParameters {
            get {
                return ResourceManager.GetString("MultipleStreamUpgradeProvidersInParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a compatible transport manager for Uri &apos;{0}&apos;..
        /// </summary>
        internal static string NoCompatibleTransportManagerForUri {
            get {
                return ResourceManager.GetString("NoCompatibleTransportManagerForUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No IPEndpoints were found for host {0}..
        /// </summary>
        internal static string NoIPEndpointsFoundForHost {
            get {
                return ResourceManager.GetString("NoIPEndpointsFoundForHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified offset exceeds the buffer size ({0} bytes)..
        /// </summary>
        internal static string OffsetExceedsBufferSize {
            get {
                return ResourceManager.GetString("OffsetExceedsBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open timed out after {0} while establishing a transport session to {1}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string OpenTimedOutEstablishingTransportSession {
            get {
                return ResourceManager.GetString("OpenTimedOutEstablishingTransportSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation was aborted while establishing a connection to {0}..
        /// </summary>
        internal static string OperationAbortedDuringConnectionEstablishment {
            get {
                return ResourceManager.GetString("OperationAbortedDuringConnectionEstablishment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not allowed for given namespace type: {0}..
        /// </summary>
        internal static string OperationIsNotAllowedForNamespaceType {
            get {
                return ResourceManager.GetString("OperationIsNotAllowedForNamespaceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have tried to create a channel to a service that does not support .Net Framing. .
        /// </summary>
        internal static string PreambleAckIncorrect {
            get {
                return ResourceManager.GetString("PreambleAckIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have tried to create a channel to a service that does not support .Net Framing. It is possible that you are encountering an HTTP endpoint..
        /// </summary>
        internal static string PreambleAckIncorrectMaybeHttp {
            get {
                return ResourceManager.GetString("PreambleAckIncorrectMaybeHttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More data was expected, but EOF was reached..
        /// </summary>
        internal static string PrematureEOF {
            get {
                return ResourceManager.GetString("PrematureEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive request on local address {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ReceiveRequestTimedOut {
            get {
                return ResourceManager.GetString("ReceiveRequestTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive request timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ReceiveRequestTimedOutNoLocalAddress {
            get {
                return ResourceManager.GetString("ReceiveRequestTimedOutNoLocalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive on local address {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ReceiveTimedOut {
            get {
                return ResourceManager.GetString("ReceiveTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ReceiveTimedOut2 {
            get {
                return ResourceManager.GetString("ReceiveTimedOut2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Receive timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ReceiveTimedOutNoLocalAddress {
            get {
                return ResourceManager.GetString("ReceiveTimedOutNoLocalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream Security is required at {0}, but no security context was negotiated. This is likely caused by the remote endpoint missing a StreamSecurityBindingElement from its binding..
        /// </summary>
        internal static string RemoteSecurityNotNegotiatedOnStreamUpgrade {
            get {
                return ResourceManager.GetString("RemoteSecurityNotNegotiatedOnStreamUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reply has already been sent from this RequestContext..
        /// </summary>
        internal static string ReplyAlreadySent {
            get {
                return ResourceManager.GetString("ReplyAlreadySent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request channel timed out attempting to send after {0}. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string RequestChannelSendTimedOut {
            get {
                return ResourceManager.GetString("RequestChannelSendTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request channel timed out while waiting for a reply after {0}. Increase the timeout value passed to the call to Request or increase the SendTimeout value on the Binding. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string RequestChannelWaitForReplyTimedOut {
            get {
                return ResourceManager.GetString("RequestChannelWaitForReplyTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requestContext has been aborted..
        /// </summary>
        internal static string RequestContextAborted {
            get {
                return ResourceManager.GetString("RequestContextAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request timed out after {0} while establishing a transport connection to {1}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string RequestTimedOutEstablishingTransportSession {
            get {
                return ResourceManager.GetString("RequestTimedOutEstablishingTransportSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Hybrid Connections to the endpoint &apos;{0}&apos; are not allowed by Group Policy..
        /// </summary>
        internal static string ResourcePublishingEndpointNotAllowed {
            get {
                return ResourceManager.GetString("ResourcePublishingEndpointNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Hybrid Connections are disabled by Group Policy..
        /// </summary>
        internal static string ResourcePublishingNotAllowed {
            get {
                return ResourceManager.GetString("ResourcePublishingNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server only supports Redirect. Client must set EnableRedirect=true in the transport settings..
        /// </summary>
        internal static string SbmpClientMustEnableRedirect {
            get {
                return ResourceManager.GetString("SbmpClientMustEnableRedirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot establish a reliable session without secure conversation. Enable secure conversation..
        /// </summary>
        internal static string SecureConversationRequiredByReliableSession {
            get {
                return ResourceManager.GetString("SecureConversationRequiredByReliableSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecurityAuditBehavior is not supported on the channel factory..
        /// </summary>
        internal static string SecurityAuditNotSupportedOnChannelFactory {
            get {
                return ResourceManager.GetString("SecurityAuditNotSupportedOnChannelFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream does not support seek related operation..
        /// </summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot send messages on a channel after CloseOutputSession has been called..
        /// </summary>
        internal static string SendCannotBeCalledAfterCloseOutputSession {
            get {
                return ResourceManager.GetString("SendCannotBeCalledAfterCloseOutputSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending to via {0} timed out after {1}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string SendToViaTimedOut {
            get {
                return ResourceManager.GetString("SendToViaTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  This request has been blocked because the entity or namespace is being throttled. Please retry the operation, and if condition continues, please slow down your rate of request..
        /// </summary>
        internal static string ServerBusy {
            get {
                return ResourceManager.GetString("ServerBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server at {0} rejected the session-establishment request. Please retry..
        /// </summary>
        internal static string ServerRejectedSessionPreamble {
            get {
                return ResourceManager.GetString("ServerRejectedSessionPreamble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server rejected the upgrade request..
        /// </summary>
        internal static string ServerRejectedUpgradeRequest {
            get {
                return ResourceManager.GetString("ServerRejectedUpgradeRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server &apos;{0}&apos; is too busy to process this request. Try again later..
        /// </summary>
        internal static string ServerTooBusy {
            get {
                return ResourceManager.GetString("ServerTooBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ServiceHost close operation timed out after {0}. This could be because a client failed to close a sessionful channel within the required time. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string SFxCloseTimedOut1 {
            get {
                return ResourceManager.GetString("SFxCloseTimedOut1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout must be greater than or equal to TimeSpan.Zero. To disable timeout, specify TimeSpan.MaxValue..
        /// </summary>
        internal static string SFxTimeoutOutOfRange0 {
            get {
                return ResourceManager.GetString("SFxTimeoutOutOfRange0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeouts larger than Int32.MaxValue TotalMilliseconds (approximately 24 days) cannot be honored. To disable timeout, specify TimeSpan.MaxValue..
        /// </summary>
        internal static string SFxTimeoutOutOfRangeTooBig {
            get {
                return ResourceManager.GetString("SFxTimeoutOutOfRangeTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An argument of the wrong type was passed to this method. This method expected an argument of type {0}, but it was passed an argument of type {1}..
        /// </summary>
        internal static string SFxWrongType2 {
            get {
                return ResourceManager.GetString("SFxWrongType2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message could not be dispatched to the service at address &apos;{0}&apos;. Refer to the server event log for more details..
        /// </summary>
        internal static string Sharing_ConnectionDispatchFailed {
            get {
                return ResourceManager.GetString("Sharing_ConnectionDispatchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message could not be dispatched because the service at the endpoint address &apos;{0}&apos; is unavailable for the protocol of the address..
        /// </summary>
        internal static string Sharing_EndpointUnavailable {
            get {
                return ResourceManager.GetString("Sharing_EndpointUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified size exceeds the remaining buffer space ({0} bytes)..
        /// </summary>
        internal static string SizeExceedsRemainingBufferSpace {
            get {
                return ResourceManager.GetString("SizeExceedsRemainingBufferSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket was aborted because an asynchronous receive from the socket did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string SocketAbortedReceiveTimedOut {
            get {
                return ResourceManager.GetString("SocketAbortedReceiveTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket connection was aborted because an asynchronous send to the socket did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string SocketAbortedSendTimedOut {
            get {
                return ResourceManager.GetString("SocketAbortedSendTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A graceful close was attempted on the socket, but the other side ({0}) is still sending data..
        /// </summary>
        internal static string SocketCloseReadReceivedData {
            get {
                return ResourceManager.GetString("SocketCloseReadReceivedData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote endpoint of the socket ({0}) did not respond to a close request within the allotted timeout ({1}). It is likely that the remote endpoint is not calling Close after receiving the EOF signal (null) from Receive. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string SocketCloseReadTimeout {
            get {
                return ResourceManager.GetString("SocketCloseReadTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket connection has been disposed..
        /// </summary>
        internal static string SocketConnectionDisposed {
            get {
                return ResourceManager.GetString("SocketConnectionDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The space needed for encoding ({0} bytes) exceeds the message frame offset..
        /// </summary>
        internal static string SpaceNeededExceedsMessageFrameOffset {
            get {
                return ResourceManager.GetString("SpaceNeededExceedsMessageFrameOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSL certificate thumbprint value is null..
        /// </summary>
        internal static string SSLCertThumbprintMissing {
            get {
                return ResourceManager.GetString("SSLCertThumbprintMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeoutStream requires an inner Stream that supports timeouts; its CanTimeout property must be true..
        /// </summary>
        internal static string StreamDoesNotSupportTimeout {
            get {
                return ResourceManager.GetString("StreamDoesNotSupportTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while transmitting data..
        /// </summary>
        internal static string StreamError {
            get {
                return ResourceManager.GetString("StreamError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A reply message was received without a valid RelatesTo header. This may have been caused by a missing RelatesTo header or a RelatesTo header with an invalid WS-Addressing Relationship type..
        /// </summary>
        internal static string SuppliedMessageIsNotAReplyItHasNoRelatesTo0 {
            get {
                return ResourceManager.GetString("SuppliedMessageIsNotAReplyItHasNoRelatesTo0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not connect to {0}. TCP error code {1}: {2}. .
        /// </summary>
        internal static string TcpConnectError {
            get {
                return ResourceManager.GetString("TcpConnectError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not connect to {0}. The connection attempt lasted for a time span of {3}. TCP error code {1}: {2}. .
        /// </summary>
        internal static string TcpConnectErrorWithTimeSpan {
            get {
                return ResourceManager.GetString("TcpConnectErrorWithTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to via {0} timed out after {1}. Connection attempts were made to {2} of {3} available addresses ({4}). Check the RemoteAddress of your channel and verify that the DNS records for this endpoint correspond to valid IP Addresses. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TcpConnectingToViaTimedOut {
            get {
                return ResourceManager.GetString("TcpConnectingToViaTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket connection was aborted. This could be caused by an error processing your message or a receive timeout being exceeded by the remote host, or an underlying network resource issue. Local socket timeout was &apos;{0}&apos;..
        /// </summary>
        internal static string TcpConnectionResetError {
            get {
                return ResourceManager.GetString("TcpConnectionResetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket transfer timed out after {0}. You have exceeded the timeout set on your binding. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TcpConnectionTimedOut {
            get {
                return ResourceManager.GetString("TcpConnectionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient winsock resources available to complete socket connection initiation..
        /// </summary>
        internal static string TcpConnectNoBufs {
            get {
                return ResourceManager.GetString("TcpConnectNoBufs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The socket connection was aborted by your local machine. This could be caused by a channel Abort() call, or a transmission error from another thread using this socket..
        /// </summary>
        internal static string TcpLocalConnectionAborted {
            get {
                return ResourceManager.GetString("TcpLocalConnectionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A TCP error ({0}: {1}) occurred while transmitting data..
        /// </summary>
        internal static string TcpTransferError {
            get {
                return ResourceManager.GetString("TcpTransferError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot claim lock within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string ThreadAcquisitionTimedOut {
            get {
                return ResourceManager.GetString("ThreadAcquisitionTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ThreadNeutralSemaphore has been aborted..
        /// </summary>
        internal static string ThreadNeutralSemaphoreAborted {
            get {
                return ResourceManager.GetString("ThreadNeutralSemaphoreAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ThreadNeutralSemaphore.Abort is not supported for the asynchronous usage..
        /// </summary>
        internal static string ThreadNeutralSemaphoreAsyncAbort {
            get {
                return ResourceManager.GetString("ThreadNeutralSemaphoreAsyncAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The open operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TimeoutOnOpen {
            get {
                return ResourceManager.GetString("TimeoutOnOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request operation did not complete within the allotted timeout of {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string TimeoutOnRequest {
            get {
                return ResourceManager.GetString("TimeoutOnRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TimeSpan must be greater than TimeSpan.Zero..
        /// </summary>
        internal static string TimeSpanMustbeGreaterThanTimeSpanZero {
            get {
                return ResourceManager.GetString("TimeSpanMustbeGreaterThanTimeSpanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token service did not return an audience..
        /// </summary>
        internal static string TokenProviderEmptyAudience {
            get {
                return ResourceManager.GetString("TokenProviderEmptyAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token service did not return a token expiration..
        /// </summary>
        internal static string TokenProviderEmptyExpiration {
            get {
                return ResourceManager.GetString("TokenProviderEmptyExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token service did not return a token..
        /// </summary>
        internal static string TokenProviderEmptyToken {
            get {
                return ResourceManager.GetString("TokenProviderEmptyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token provider was unable to provide a security token while accessing &apos;{0}&apos;. Token provider returned message: &apos;{1}&apos;..
        /// </summary>
        internal static string TokenProviderFailedSecurityToken {
            get {
                return ResourceManager.GetString("TokenProviderFailedSecurityToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token service returned an invalid parameter &apos;{0}&apos;..
        /// </summary>
        internal static string TokenProviderInvalidTokenParameter {
            get {
                return ResourceManager.GetString("TokenProviderInvalidTokenParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The token provider service was not available when obtaining a token for &apos;{0}&apos;..
        /// </summary>
        internal static string TokenProviderServiceUnavailable {
            get {
                return ResourceManager.GetString("TokenProviderServiceUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timeout elapsed upon attempting to obtain a token while accessing &apos;{0}&apos;..
        /// </summary>
        internal static string TokenProviderTimeout {
            get {
                return ResourceManager.GetString("TokenProviderTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AppDomain Unloading..
        /// </summary>
        internal static string TraceCodeAppDomainUnload {
            get {
                return ResourceManager.GetString("TraceCodeAppDomainUnload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aborted &apos;{0}&apos;..
        /// </summary>
        internal static string TraceCodeCommunicationObjectAborted {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to abort {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectAbortFailed {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectAbortFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closed {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectClosed {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to close {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectCloseFailed {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectCloseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closing {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectClosing {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectClosing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Faulted {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectFaulted {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectFaulted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opened {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectOpened {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectOpenFailed {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening {0}.
        /// </summary>
        internal static string TraceCodeCommunicationObjectOpening {
            get {
                return ResourceManager.GetString("TraceCodeCommunicationObjectOpening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection has exceeded the idle timeout of this connection pool ({0}) and been closed..
        /// </summary>
        internal static string TraceCodeConnectionPoolIdleTimeoutReached {
            get {
                return ResourceManager.GetString("TraceCodeConnectionPoolIdleTimeoutReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection has exceeded the connection lease timeout of this connection pool ({0}) and been closed..
        /// </summary>
        internal static string TraceCodeConnectionPoolLeaseTimeoutReached {
            get {
                return ResourceManager.GetString("TraceCodeConnectionPoolLeaseTimeoutReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxOutboundConnectionsPerEndpoint quota ({0}) has been reached, so connection was closed and not stored in this connection pool..
        /// </summary>
        internal static string TraceCodeConnectionPoolMaxOutboundConnectionsPerEndpointQuotaReached {
            get {
                return ResourceManager.GetString("TraceCodeConnectionPoolMaxOutboundConnectionsPerEndpointQuotaReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrote to the event log..
        /// </summary>
        internal static string TraceCodeEventLog {
            get {
                return ResourceManager.GetString("TraceCodeEventLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to reuse a pooled connection failed. Another attempt will be made with {0} remaining in the overall timeout..
        /// </summary>
        internal static string TraceCodeFailedAcceptFromPool {
            get {
                return ResourceManager.GetString("TraceCodeFailedAcceptFromPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MaxOutboundConnectionsPerEndpoint quota ({0}) has been reached, so the connection was closed and not reused by the listener..
        /// </summary>
        internal static string TraceCodeServerMaxPooledConnectionsQuotaReached {
            get {
                return ResourceManager.GetString("TraceCodeServerMaxPooledConnectionsQuotaReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A trace size quota was exceeded. The trace was truncated..
        /// </summary>
        internal static string TraceCodeTraceTruncatedQuotaExceeded {
            get {
                return ResourceManager.GetString("TraceCodeTraceTruncatedQuotaExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listening at &apos;{0}&apos;..
        /// </summary>
        internal static string TraceCodeTransportListen {
            get {
                return ResourceManager.GetString("TraceCodeTransportListen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property cannot be changed after the transport manager has been opened..
        /// </summary>
        internal static string TransportManagerOpen {
            get {
                return ResourceManager.GetString("TransportManagerOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot resolve the host name of URI &quot;{0}&quot; using DNS..
        /// </summary>
        internal static string UnableToResolveHost {
            get {
                return ResourceManager.GetString("UnableToResolveHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception went unhandled..
        /// </summary>
        internal static string UnhandledException {
            get {
                return ResourceManager.GetString("UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol Type {0} was sent to a service that does not support that type of upgrade..
        /// </summary>
        internal static string UpgradeProtocolNotSupported {
            get {
                return ResourceManager.GetString("UpgradeProtocolNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .Net Framing upgrade request for {0} was sent to a service that is not setup to receive upgrades..
        /// </summary>
        internal static string UpgradeRequestToNonupgradableService {
            get {
                return ResourceManager.GetString("UpgradeRequestToNonupgradableService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scheme parameter must not be empty..
        /// </summary>
        internal static string UriGeneratorSchemeMustNotBeEmpty {
            get {
                return ResourceManager.GetString("UriGeneratorSchemeMustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uri {0} could not be set because its size ({1}) exceeds the max supported size ({2})..
        /// </summary>
        internal static string UriLengthExceedsMaxSupportedSize {
            get {
                return ResourceManager.GetString("UriLengthExceedsMaxSupportedSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of this argument must fall within the range {0} to {1}..
        /// </summary>
        internal static string ValueMustBeInRange {
            get {
                return ResourceManager.GetString("ValueMustBeInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of this argument must be non-negative..
        /// </summary>
        internal static string ValueMustBeNonNegative {
            get {
                return ResourceManager.GetString("ValueMustBeNonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of this argument must be positive..
        /// </summary>
        internal static string ValueMustBePositive {
            get {
                return ResourceManager.GetString("ValueMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WaitForMessage timed out after {0}. The time allotted to this operation may have been a portion of a longer timeout..
        /// </summary>
        internal static string WaitForMessageTimedOut {
            get {
                return ResourceManager.GetString("WaitForMessageTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of the buffer passed to PlainXmlWriter.WriteChars are invalid..
        /// </summary>
        internal static string WriteCharsInvalidContent {
            get {
                return ResourceManager.GetString("WriteCharsInvalidContent", resourceCulture);
            }
        }
    }
}
